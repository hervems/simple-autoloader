<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="Hervems-Coding-Standard">
    <description>My Coding Standard based in PSR-1, PSR-2, Zend Naming Conventions</description>

    <!-- Exclude files for tests units -->
    <exclude-pattern>_files</exclude-pattern>
 
    <!-- PSR-2 -->
    <rule ref="PSR2"/>

    <!-- PSR-1 -->
    <rule ref="PSR1"/>

    <!-- Zend Naming conventions - Valid Variable Name -->
    <rule ref="Zend.NamingConventions.ValidVariableName"/>

    <!-- Don't enforce Zend's private member underscores -->
    <rule ref="Zend.NamingConventions.ValidVariableName.PrivateNoUnderscore">
        <severity>0</severity>
    </rule>

    <!-- Line Endings \n -->
    <rule ref="Generic.Files.LineEndings">
        <properties>
            <property name="eolChar" value="\n"/>
        </properties>    
    </rule>

    <!-- Line length (120) -->
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120"/>
            <property name="absoluteLineLimit" value="120"/>
        </properties>
    </rule>

    <!-- Forbidden functions -->
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array"
                value="print=>echo,exit=>null,var_dump=>null,die=>null,print_r=>null"/>
        </properties>
    </rule>

    <!-- Don't check incorrect author -->
    <rule ref="Squiz.Commenting.FileComment.IncorrectAuthor">
        <severity>0</severity>
    </rule>

    <!-- Don't check incorrect copyright -->
    <rule ref="Squiz.Commenting.FileComment.IncorrectCopyright">
        <severity>0</severity>
    </rule> 

    <!-- Don't check Package -->
    <rule ref="Squiz.Commenting.FileComment.MissingPackageTag">
        <severity>0</severity>
    </rule>    

    <rule ref="Squiz.Commenting.FileComment.PackageTagOrder">
        <severity>0</severity>
    </rule>

    <!-- Don't check Sub Package -->
    <rule ref="Squiz.Commenting.FileComment.MissingSubpackageTag">
        <severity>0</severity>
    </rule>

    <rule ref="Squiz.Commenting.FileComment.SubpackageTagOrder">
        <severity>0</severity>
    </rule>

    <!-- Double quote string that contains var is prohibited -->
    <rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar"/>

    <!-- We can aerate the code with space line ! (only 2) -->
    <rule ref="Squiz.ControlStructures.ControlSignature">
        <properties>
            <property name="maxLinesAfterABrace" value="2"/>
        </properties>
    </rule>

    <!-- Others -->
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.Commenting.ClassComment" />
    <rule ref="Squiz.Commenting.FileComment" />
    <rule ref="Squiz.Commenting.FunctionComment" />
    <rule ref="Squiz.Commenting.FunctionCommentThrowTag" />
    <rule ref="Squiz.Commenting.VariableComment" />
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>

</ruleset>
